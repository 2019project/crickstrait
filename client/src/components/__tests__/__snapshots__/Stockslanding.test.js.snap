// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Stocks Component should mount the component 1`] = `
<div>
  <div>
    <h1>
      dividend 
    </h1>
    <div
      id="stocks-landing-page-slider"
    >
      <ComponentWrapper
        defaultValue={
          Array [
            50,
            80,
          ]
        }
        handleStyle={
          Array [
            Object {},
          ]
        }
        max={1000}
        min={0}
        onChange={[Function]}
        tipFormatter={[Function]}
        tipProps={Object {}}
      />
    </div>
    <p>
      Value: 
      50
    </p>
    <p>
      Value: 
      80
    </p>
  </div>
  <h1>
    market cap 
  </h1>
  <div>
    <div
      id="stocks-landing-page-slider"
    >
      <ComponentWrapper
        defaultValue={
          Array [
            60,
            70,
          ]
        }
        handleStyle={
          Array [
            Object {},
          ]
        }
        max={1000}
        min={0}
        name="slider1"
        onChange={[Function]}
        tipFormatter={[Function]}
        tipProps={Object {}}
      />
    </div>
    <p>
      Value: 
      60
    </p>
    <p>
      Value: 
      70
    </p>
  </div>
  <div>
    <h1>
      share price 
    </h1>
    <div
      id="stocks-landing-page-slider"
    >
      <ComponentWrapper
        defaultValue={
          Array [
            43,
            72,
          ]
        }
        handleStyle={
          Array [
            Object {},
          ]
        }
        max={1000}
        min={0}
        onChange={[Function]}
        tipFormatter={[Function]}
        tipProps={Object {}}
      />
    </div>
    <p>
      Value: 
      43
    </p>
    <p>
      Value: 
      72
    </p>
  </div>
  <div>
    <h1>
      PRICE TO EQUITY
    </h1>
    <div
      id="stocks-landing-page-slider"
    >
      <ComponentWrapper
        defaultValue={
          Array [
            89,
            44,
          ]
        }
        handleStyle={
          Array [
            Object {},
          ]
        }
        max={1000}
        min={0}
        onChange={[Function]}
        tipFormatter={[Function]}
        tipProps={Object {}}
      />
    </div>
    <p>
      Value: 
      89
    </p>
    <p>
      Value: 
      44
    </p>
  </div>
  <div>
    <h1>
      DEBT TO EQUITY RATIO
    </h1>
    <div
      id="stocks-landing-page-slider"
    >
      <ComponentWrapper
        defaultValue={
          Array [
            45,
            34,
          ]
        }
        handleStyle={
          Array [
            Object {},
          ]
        }
        max={1000}
        min={0}
        onChange={[Function]}
        tipFormatter={[Function]}
        tipProps={Object {}}
      />
    </div>
    <p>
      Value: 
      45
    </p>
    <p>
      Value: 
      34
    </p>
  </div>
  <button
    onClick={[Function]}
    type="submit"
  >
    Search
     
  </button>
  <div
    id="stocks_main_container"
  >
    <div
      id="stocks_filter"
    >
      <select
        className="stocks_dropdown"
        id="stocks_dropdown_sectors"
        name="sector"
        onChange={[Function]}
        type="text"
        value="Basic Materials"
      >
        <option
          id="sector0"
          name="choice"
        >
          Technology
        </option>
        <option
          id="sector1"
          name="choice"
        >
          Healthcare
        </option>
      </select>
      <select
        className="stocks_dropdown"
        id="stocks_dropdown_industries"
        name="industries"
        onChange={[Function]}
        type="text"
        value="Building Materials"
      >
        <option
          id="industry0"
          name="choice"
        >
          Compauter H/w
        </option>
        <option
          id="industry1"
          name="choice"
        >
          online Media
        </option>
      </select>
    </div>
    <div
      id="stocks_main_grid_container"
    >
      <InfiniteScroll
        dataLength={0}
        endMessage={
          <p
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            <b>
              Yay! You have seen all the stocks
            </b>
          </p>
        }
        hasMore={true}
        height={600}
        loader={
          <div
            id="stocks_loader"
          >
            <Loader
              className=""
              color="#2c3e50"
              style={Object {}}
              textAlign="center"
              timeout={0}
              type={[Function]}
              visible={true}
            />
          </div>
        }
        next={[Function]}
      >
        <div
          id="stocks_grid_container"
        />
      </InfiniteScroll>
    </div>
    <div
      id="stocks_table"
    >
      <div
        id="stocks_div_buttons"
      >
        <button
          className="stocks_gainers"
          id="button_stocks_gainers"
          onClick={[Function]}
        >
          Gainers
        </button>
        <button
          className="stocks_losers"
          id="button_stocks_losers"
          onClick={[Function]}
        >
          Losers
        </button>
      </div>
      <Connect(TickerTable)
        tableData={
          Array [
            Object {
              "tickerValues": Object {
                "Market Cap": "68.00M",
                "Share Price": "4.38",
                "change_percent": "+30.37",
              },
              "ticker_id": 1030,
              "ticker_name": "HPJ",
            },
          ]
        }
        tableHeaders={
          Array [
            "Ticker",
            "Chng (%)",
            "Market Cap",
            "Share Price",
          ]
        }
      />
    </div>
  </div>
</div>
`;
